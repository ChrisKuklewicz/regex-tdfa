Name:                   regex-tdfa
Version:                1.2.3.2
License:                BSD3
License-File:           LICENSE
Copyright:              Copyright (c) 2007, Christopher Kuklewicz
Author:                 Christopher Kuklewicz
Maintainer:             Artyom <yom@artyom.me>, Christopher Kuklewicz <TextRegexLazy@personal.mightyreason.com>
Stability:              Seems to work, but not POSIX yet
Homepage:               https://github.com/ChrisKuklewicz/regex-tdfa
Bug-Reports:            https://github.com/ChrisKuklewicz/regex-tdfa/issues
Synopsis:               Replaces/Enhances Text.Regex
Description:            A new all Haskell "tagged" DFA regex engine, inspired by libtre
Category:               Text
Tested-With:            GHC==7.6.3
                      , GHC==7.8.4
                      , GHC==7.10.3
                      , GHC==8.0.2
                      , GHC==8.2.2
                      , GHC==8.4.4
                      , GHC==8.6.4
Build-Type:             Simple
extra-source-files:
  CHANGELOG.md
Cabal-Version:          >= 1.6

source-repository head
  type:                git
  location:            git://github.com/ChrisKuklewicz/regex-tdfa.git

flag devel
  description: enable flags that are useful for development
  default: False
  manual: True

library
  Build-Depends:        array              >= 0.4 && < 0.6
                      , base               >= 4 && < 5
                      , bytestring         >= 0.10 && < 0.11
                      , containers         >= 0.5 && < 0.7
                      , ghc-prim
                      , mtl                == 2.*
                      , parsec             == 3.*
                      , regex-base         >= 0.93.1

  -- Support Semigroup instances uniformly
  --
  -- See also
  --  https://prime.haskell.org/wiki/Libraries/Proposals/SemigroupMonoid#RecommendedVariant
  --
  -- NB: This is the same logic `parsec.cabal` uses, so this doesn't
  -- add any new dependency that isn't already incurred by
  -- `regex-tdfa`'s transitive deps
  if !impl(ghc >= 8.0)
    build-depends:      fail
                      , semigroups == 0.18.*

  other-modules:          Paths_regex_tdfa
  Exposed-Modules:        Data.IntMap.CharMap2
                          Data.IntMap.EnumMap2
                          Data.IntSet.EnumSet2
                          Text.Regex.TDFA
                          Text.Regex.TDFA.ByteString
                          Text.Regex.TDFA.ByteString.Lazy
                          Text.Regex.TDFA.Common
                          Text.Regex.TDFA.CorePattern
                          Text.Regex.TDFA.IntArrTrieSet
                          Text.Regex.TDFA.NewDFA.Engine
                          Text.Regex.TDFA.NewDFA.Engine_FA
                          Text.Regex.TDFA.NewDFA.Engine_NC
                          Text.Regex.TDFA.NewDFA.Engine_NC_FA
                          Text.Regex.TDFA.NewDFA.Tester
                          Text.Regex.TDFA.NewDFA.Uncons
                          Text.Regex.TDFA.NewDFA.MakeTest
                          Text.Regex.TDFA.Pattern
                          Text.Regex.TDFA.ReadRegex
                          Text.Regex.TDFA.Sequence
                          Text.Regex.TDFA.String
                          Text.Regex.TDFA.TDFA
                          Text.Regex.TDFA.TNFA
  Buildable:              True
  Extensions:             MultiParamTypeClasses, FunctionalDependencies, BangPatterns, MagicHash, RecursiveDo, NoMonoPatBinds, ForeignFunctionInterface, UnboxedTuples, TypeOperators, FlexibleContexts, ExistentialQuantification, UnliftedFFITypes, TypeSynonymInstances, FlexibleInstances
  GHC-Options:            -Wall -funbox-strict-fields -fspec-constr-count=10 -O2 -fno-warn-orphans
  if flag(devel)
    ghc-prof-options: -auto-all
